---
# Source: elasticsearch/templates/poddisruptionbudget.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: "elasticsearch-master-pdb"
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app: "elasticsearch-master"
---
# Source: elasticsearch/templates/secret-cert.yaml
apiVersion: v1
kind: Secret
type: kubernetes.io/tls
metadata:
  name: elasticsearch-master-certs
  labels:
    app: elasticsearch-master
    chart: "elasticsearch"
    heritage: Helm
    release: elasticsearch
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURoekNDQW0rZ0F3SUJBZ0lRRGNMYkxzZHR0dVk4QzErOWpxN0t5REFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCbGJHRnpkR2xqYzJWaGNtTm9MV05oTUI0WERUSTBNVEF4TmpFNU5EUTFPVm9YRFRJMQpNVEF4TmpFNU5EUTFPVm93SHpFZE1Cc0dBMVVFQXhNVVpXeGhjM1JwWTNObFlYSmphQzF0WVhOMFpYSXdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFA3dnhQVmc0Ri9aaEJNWThNa1dBWWo3Z1IKN2tvNGI3VERweGFYRkZsOUxOMWVtbFB5R25Tb25SeHc0WVYyNlhHWG9oN2ZFMGxQaVpicWtQK1ZsaFF6NzFXVgpkZkZtSWNEY1l0Vi9WQ0dHbGFKd0NaY0dmLzRzRDhVenA5TDkrQTJXYkZYaTU0MHlBUmlvWFN2TlgwLytPVk9XCm54S3ljdHBoVStNdmszU1pjNEM5dit4UlZmd2xQUkdNS1ZtM2pGai9rTjlRY0hPWVdPbllmKzQ1TlhrY21aZUcKdWlYUjNvNGdYSU0yNzVoK2EzOXE5UXhVbUpCVHlSZ1R4RTVPVHJqYXY4MVNiaTgyUWpCNHpmMDFKWXBXZ2xncgp4bklYNEVlWmNqeU1QY0VaTXByVUFvZWRaU1YzSmRnWlNWV2M4S2dKb2hTdWVaSm1ObERVcHZDVi90TlhBZ01CCkFBR2pnY0l3Z2I4d0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGQWNBUm5NcUhMN244K1RVaHJEOQpYRzFZMjVTUE1GOEdBMVVkRVFSWU1GYUNGR1ZzWVhOMGFXTnpaV0Z5WTJndGJXRnpkR1Z5Z2h4bGJHRnpkR2xqCmMyVmhjbU5vTFcxaGMzUmxjaTVzYjJkbmFXNW5naUJsYkdGemRHbGpjMlZoY21Ob0xXMWhjM1JsY2k1c2IyZG4KYVc1bkxuTjJZekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBaUQ5b09Bbm5HODY5bGw2R1RqSmtRaEJVNnd5bwpTektQbEFuK0Q0WmZpNm9RdWpkcmJONjFnVzFSQXNHQldKU2dRUjB4aTFHV3ArV3ZmVXk3eGw1Q1VRUFRocHZwCjNFeno1NENPVzBQN3NobGFab1NZS3EzVVIxeW5ZbENwaUFGT1U2bmxhVE9oQUIxK1M2V0tKV09oSnNJamJndXcKNFJGaVUvTVQvakZkb0lDenlGOTY5d3htSk8wRkJxUk5XbE9xVlZBMVc2TTNXQTJ5aW0rQUczZmYwTjFoVFhFQwpwWkZhSVFNSjhZbEhlcXJMRkNuTGJwVFA1Yi9ESWJCZVN3aDMrQ1NLandVaytYV0dIWDdYTjI2M2tlTWFWM2RvCkxhWHVaZ1M3VWxhZmtXZUxicG9OT0hKUjF5ZSt4eHNnMDFFNVJKaTh3STRXejJlaVU2WHNnU0RUL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeis3OFQxWU9CZjJZUVRHUERKRmdHSSs0RWU1S09HKzB3NmNXbHhSWmZTemRYcHBUCjhocDBxSjBjY09HRmR1bHhsNkllM3hOSlQ0bVc2cEQvbFpZVU0rOVZsWFh4WmlIQTNHTFZmMVFoaHBXaWNBbVgKQm4vK0xBL0ZNNmZTL2ZnTmxteFY0dWVOTWdFWXFGMHJ6VjlQL2psVGxwOFNzbkxhWVZQakw1TjBtWE9BdmIvcwpVVlg4SlQwUmpDbFp0NHhZLzVEZlVIQnptRmpwMkgvdU9UVjVISm1YaHJvbDBkNk9JRnlETnUrWWZtdC9hdlVNClZKaVFVOGtZRThST1RrNjQyci9OVW00dk5rSXdlTTM5TlNXS1ZvSllLOFp5RitCSG1YSThqRDNCR1RLYTFBS0gKbldVbGR5WFlHVWxWblBDb0NhSVVybm1TWmpaUTFLYndsZjdUVndJREFRQUJBb0lCQUNpVk5VdHF1VXYwQmQ1YgpoTmJvSE1CT2RKZVRVWXNZU2tpUmVQZzlzWVdiMXd6YXhCMlJpa2xLZUwyVFZwQXgyY2pGakk3dlhiU1hYd3dqCkJxODBYbmNRZER5NmkwWHF1cENJL2JCZlJEZlhScC9sVDBPbWdYNHFDY3dlS2pFRlUrbVM5V1JXMnhqeVc5U28KY3A4ZnhpWVJIRDVlaDdDcWQvTGRBNDlLa1V4Tmc3ZitvQUludDkrWU50NWJ1UWJyblhtQWZZMy9YelBFYUpCbQpkRnEyZE9CbVZhdHFHYkk5RTFNZlJ6YjRGcjNHR1EwaTFEU29wYVdsRERmZmxaSldnUEQ0cHU2UC8weUNRYzZ2CmdvN0hHUmE5NzNpU3oycWxleGZnbFJYUG9nQWw4em93YTJSaXBrUXc1Q1FzcjFCTXB2eEpCenZxYVFzR21UMFYKUDFYTWlHa0NnWUVBNVZvNnZMQ1FsZTc4bENSUDBCYnQ5ekhtQ2x4WVhZMnl6ektVVEF1UCtpRXNITnEvQ1ZXRwp3aUZLaUFrZUNheHFhZUdpZnlDVkFhQTVMcnFtY3hpUmxacURXcjVoQVl3Mm44MmNaK2JwRlZPN1c0d2kvTGwxCnVGSHRqL2hLak1UbWpSSVdpQkw1Q1A3MDV2a1daSTVUYWZLa3FkcWVkSGhNSklMbjZlRzJRek1DZ1lFQTZCZXUKR0VHSGswSGcybldxNnNocDcvRGtqU0libitWUGRPQVoyZFdIUGpNUUF4ZTl4Qk9uWnMwZmdRSVU3bG1wcjZqOAp0RklvZFE2N2ZDSUZseCtrUzIzL0Zodm9qaTZXVmh2VGw1OFprMEZjWGhvWlYzQktkbHJNWFlPMFNMQWZaUk44CmZQa0tESm45NWp5ZldSeE45Z3BYT3VVZGZBRzhZQ21DR0ZEUTcwMENnWUVBM0RHc2dzdmhoSkZWM2NTZSsrR0gKeGZRYUw0aEpMa2lFaTNpNzkrYUI3RnM4eHRjYzRoRkN0ODdPaDV4NVFrQk9TaWxlb1Q3ZTBCakx6WmxWaE5ycApxd0FWYkdHck1KazFPR2RtNmpvL1BVS09kbTRzaVFabGh2amhZMysxMDBDWE9JbE5LSWRPb054bXMvb2hEWm0zCmE5aVJUcUdkejZSUE5oNllHV3VpV1JFQ2dZQlhTT2lSZUx1TEZ3Q0FTRFp5TzlNVGlNMzdnZk5QckFhNDFyc0MKSUhyUFdwYlFBdks4TmdRRDltcTlzdEc2WGdBaDd2U3l3QjgwL3NobHc4bkVid0x6MXpkUzBrWWdpc2JCTlkvYQordHU4ZEoxUFNwTnpQZWpUSUF5eHNxRnZvTVQ5MTFrL0NzM0x0WEkyVDJCQ1BCSFowVVBEQTMyV01IVHUyVTF5CjVabmVGUUtCZ0ZSWDQyc0F6NEpQdE1GOUI4SzFMTCt6aUQ4Y3VMYWV4eFNpRUVhSnJvKzZYYkRXZGxBMG8vNlQKQ3QrT2pIbTRqaHhUdTNIbkhGWFhLNWowTllCelRqZ1RUOWJzL3A4SjYvTlJ2bG5zYWhxalNOQ2EvbCsrVWNJdgpyUWpTWGZua3NtSlpFUGkxZ3RxT1VBN2hWQlpaRHh2ZUNCUmtFa0d0b1lmVHVPa1Z4TER6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lRSUptY1J2VE1Lc1E5ZU1DV3Uxejd5VEFOQmdrcWhraUc5dzBCQVFzRkFEQWIKTVJrd0Z3WURWUVFERXhCbGJHRnpkR2xqYzJWaGNtTm9MV05oTUI0WERUSTBNVEF4TmpFNU5EUTFPRm9YRFRJMQpNVEF4TmpFNU5EUTFPRm93R3pFWk1CY0dBMVVFQXhNUVpXeGhjM1JwWTNObFlYSmphQzFqWVRDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxpdENvRC9OL1Blak5KZFZCSVZ6MHJvV0twRlh5REEKSnVEVUdTcHl0b21XUnRYNmo4YTVuc01sdkNaY2Q5RGlQUkZlVTE0ZnA1NTkrR0dYaDFYV2Erc1JWcVpVVDh5SApYYUpudG5IenprcDlKY28yMGl4VGk4L0Q0UmpseVhZd1ViNTZkdVptU09BNzh0dFRBRWZ5eUFseGppWDByUGJtCk9HbnBzTnZDdXJSbzlwSGs4S25TalJVMjJmSmZkK21CYTM1NHFzNklORk1LS1MxSzRQSlVMVjJKTEJQeDZtM0sKTFBUd2hIZk1FSUl4WXhQQ0tuMHJ4Z3R2RzFpZzhrR2VjRGMrSXEvNEJjVDZvWUNtWjJGWndzQ3k1Mmc2clVlbApnS0wvaTIwQXhDcm9KVHZ5RTlVRlkxMkp5WG1DV0tBWkl1QzRqZWFnZE8wVmFNcVBqanZRRnlVQ0F3RUFBYU5oCk1GOHdEZ1lEVlIwUEFRSC9CQVFEQWdLa01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0QKQWpBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRSEFFWnpLaHkrNS9QazFJYXcvVnh0V051VQpqekFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBanRwSzMyTy9mVUJmY3lRbk5YMXNYY21FcjlWZTBIMVlwQXJCCjg0Q2h3Ly9yZVJZUmhpMDZSQ3M4aU1vTjA5YVVtZjBPUjhWczZhL00rbkVkdXdkL3E5RDkzYkRWUzI1ampETjgKOVczZXlzYUQ3c1RXRGMxa0JMRnljSHoxTTUxSGE1VXVFLzNoZHFnVmJkbnd2ZWt3WUZEUlBqd01KWU03RWNQOQo4SGxqNElTNkluL2FZYmRNL20vK1IrUlArT2NGRFdsRXBNWHNBWG45Y0hLQ1B1RG00eUR6Mm51N1laL3hzMGZ4CjNMOHJTcVNBaVQ2MWRtVEpOekZBa1N1YkwvaTRBWlRJL29QVlVsV0Z1UFhPMzFVSGk2blUrMmJWK3J0ZHBSS20KMXVlNFFpL1dqM2JEYmpVQ3NqMnVzWW5GYmg2L0xYandFdDkrRnBjait3ZkNIbld1S3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
---
# Source: elasticsearch/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: elasticsearch-master-credentials
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
type: Opaque
data:
  username: ZWxhc3RpYw==
  password: "Y2FhODJQdG5LQXhibEpXYg=="
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    {}
spec:
  type: ClusterIP
  selector:
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  publishNotReadyAddresses: false
  ports:
  - name: http
    protocol: TCP
    port: 9200
  - name: transport
    protocol: TCP
    port: 9300
---
# Source: elasticsearch/templates/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: elasticsearch-master-headless
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  clusterIP: None # This is needed for statefulset hostnames like elasticsearch-0 to resolve
  # Create endpoints also if the related pod isn't ready
  publishNotReadyAddresses: true
  selector:
    app: "elasticsearch-master"
  ports:
  - name: http
    port: 9200
  - name: transport
    port: 9300
---
# Source: elasticsearch/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-master
  labels:
    heritage: "Helm"
    release: "elasticsearch"
    chart: "elasticsearch"
    app: "elasticsearch-master"
  annotations:
    esMajorVersion: "8"
spec:
  serviceName: elasticsearch-master-headless
  selector:
    matchLabels:
      app: "elasticsearch-master"
  replicas: 3
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  volumeClaimTemplates:
  - metadata:
      name: elasticsearch-master
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 5i
  template:
    metadata:
      name: "elasticsearch-master"
      labels:
        release: "elasticsearch"
        chart: "elasticsearch"
        app: "elasticsearch-master"
      annotations:
        
    spec:
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - "elasticsearch-master"
            topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 120
      volumes:
        - name: elasticsearch-certs
          secret:
           secretName: elasticsearch-master-certs
      enableServiceLinks: true
      initContainers:
      - name: configure-sysctl
        securityContext:
          runAsUser: 0
          privileged: true
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        resources:
          {}

      containers:
      - name: "elasticsearch"
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          runAsUser: 1000
        image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
        imagePullPolicy: "IfNotPresent"
        readinessProbe:
          exec:
            command:
              - bash
              - -c
              - |
                set -e

                # Exit if ELASTIC_PASSWORD in unset
                if [ -z "${ELASTIC_PASSWORD}" ]; then
                  echo "ELASTIC_PASSWORD variable is missing, exiting"
                  exit 1
                fi

                # If the node is starting up wait for the cluster to be ready (request params: "wait_for_status=green&timeout=1s" )
                # Once it has started only check that the node itself is responding
                START_FILE=/tmp/.es_start_file

                # Disable nss cache to avoid filling dentry cache when calling curl
                # This is required with Elasticsearch Docker using nss < 3.52
                export NSS_SDB_USE_CACHE=no

                http () {
                  local path="${1}"
                  local args="${2}"
                  set -- -XGET -s

                  if [ "$args" != "" ]; then
                    set -- "$@" $args
                  fi

                  set -- "$@" -u "elastic:${ELASTIC_PASSWORD}"

                  curl --output /dev/null -k "$@" "https://127.0.0.1:9200${path}"
                }

                if [ -f "${START_FILE}" ]; then
                  echo 'Elasticsearch is already running, lets check the node is healthy'
                  HTTP_CODE=$(http "/" "-w %{http_code}")
                  RC=$?
                  if [[ ${RC} -ne 0 ]]; then
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with RC ${RC}"
                    exit ${RC}
                  fi
                  # ready if HTTP code 200, 503 is tolerable if ES version is 6.x
                  if [[ ${HTTP_CODE} == "200" ]]; then
                    exit 0
                  elif [[ ${HTTP_CODE} == "503" && "8" == "6" ]]; then
                    exit 0
                  else
                    echo "curl --output /dev/null -k -XGET -s -w '%{http_code}' \${BASIC_AUTH} https://127.0.0.1:9200/ failed with HTTP code ${HTTP_CODE}"
                    exit 1
                  fi

                else
                  echo 'Waiting for elasticsearch cluster to become ready (request params: "wait_for_status=green&timeout=1s" )'
                  if http "/_cluster/health?wait_for_status=green&timeout=1s" "--fail" ; then
                    touch ${START_FILE}
                    exit 0
                  else
                    echo 'Cluster is not yet ready (request params: "wait_for_status=green&timeout=1s" )'
                    exit 1
                  fi
                fi
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
        ports:
        - name: http
          containerPort: 9200
        - name: transport
          containerPort: 9300
        resources:
          limits:
            cpu: 1000m
            memory: 2Gi
          requests:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: cluster.initial_master_nodes
            value: "elasticsearch-master-0,elasticsearch-master-1,elasticsearch-master-2,"
          - name: node.roles
            value: "master,data,data_content,data_hot,data_warm,data_cold,ingest,ml,remote_cluster_client,transform,"
          - name: discovery.seed_hosts
            value: "elasticsearch-master-headless"
          - name: cluster.name
            value: "elasticsearch"
          - name: network.host
            value: "0.0.0.0"
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elasticsearch-master-credentials
                key: password
          - name: xpack.security.enabled
            value: "true"
          - name: xpack.security.transport.ssl.enabled
            value: "true"
          - name: xpack.security.http.ssl.enabled
            value: "true"
          - name: xpack.security.transport.ssl.verification_mode
            value: "certificate"
          - name: xpack.security.transport.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.transport.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.transport.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
          - name: xpack.security.http.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.http.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.http.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
        volumeMounts:
          - name: "elasticsearch-master"
            mountPath: /usr/share/elasticsearch/data
          - name: elasticsearch-certs
            mountPath: /usr/share/elasticsearch/config/certs
            readOnly: true
---
# Source: elasticsearch/templates/test/test-elasticsearch-health.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "elasticsearch-uyggm-test"
  annotations:
    "helm.sh/hook": test
    "helm.sh/hook-delete-policy": hook-succeeded
spec:
  securityContext:
    fsGroup: 1000
    runAsUser: 1000
  containers:
  - name: "elasticsearch-rabne-test"
    env:
      - name: ELASTIC_PASSWORD
        valueFrom:
          secretKeyRef:
            name: elasticsearch-master-credentials
            key: password
    image: "docker.elastic.co/elasticsearch/elasticsearch:8.5.1"
    imagePullPolicy: "IfNotPresent"
    command:
      - "sh"
      - "-c"
      - |
        #!/usr/bin/env bash -e
        curl -XGET --fail --cacert /usr/share/elasticsearch/config/certs/tls.crt -u "elastic:${ELASTIC_PASSWORD}" https://'elasticsearch-master:9200/_cluster/health?wait_for_status=green&timeout=1s'
    volumeMounts:
      - name: elasticsearch-certs
        mountPath: /usr/share/elasticsearch/config/certs
        readOnly: true
  restartPolicy: Never
  volumes:
    - name: elasticsearch-certs
      secret:
        secretName: elasticsearch-master-certs
